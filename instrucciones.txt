Vamos a crear la API restfull, para enlazar base dedatos con nuestro crud.Lo haremos de tal forma que podremos comunicarnos con cualquier base de datos
Lo haremos con VUEJS
                        req                                 req
                       ----)                           --------)
CLIENTE                                     API                                         BASE DE DATOS
appAndroid            (-------                           (--------                       (mysql,mongoDB,...)
app ios                   res                                 res
app web vuejs

------------REST----------------

1) uso de interfaz uniforme
2) modelo Cliente-Servidor
3) operaciones sin estado
4) almacenamiento en caché
5) sistema de capas
6) código bajo demanda

Cuando cumple estos requisitos es rest full
para usar el api es necesario autorizarse frente al mismo añadiendo un header token
El tipo de autorizacion es BEARER{TOKEN}
Nos llegara algo como una cadena de texto
El del video coge la api del banco central europe argentino, ahi hay documentacion que te dice que tipo de token necesita,coge el token, lo Copia
y lo pega cuando hace una request(get por ejemplo). Primero lo ahce sin token y no le deja, una vez mete el token, al hacer el request
ya aparece la información.

Usaremos:
    postman para probar la IP
    express que es un wareframe de node js y el paquete mysql de node js

empezamos---------------------

Creamos carpeta y en el terminal ponemos  npm init -y para crear el archivo json
Es el archivo base donde vamos a trabajar.
Instalamos expres--) npm install express
Instalamos mysql---) npm install mysql

Creamos un archivo (app.js) y lo primero es hacer el required de los paquetes que hemos instalado:
    require('expres') required(mysql) asignandolo a variables(para trabajar mejor)

creamo un objeto de express para poder acceder a todo:  let app = express()
Creamos nuestra primera funcion con listen para comprobar que funciona, ejecutamos la funcion con : 
    node app y vemos como en consola pone servidor ok

Si vamos a localhost:3000 veremos que nos dice cannot get /, esto es que no puede acceder a la raíz,para ello debemos configurar las rutas,as cuales se hacen
todas con metodo GET:
    app.get('/',function(req,res){
        res.send('Ruta INICIO')
    })
    cortamos servidor, lo volvemos a arrancar y vemos como ahora si aparece ruta inicio, que es lo mismo que si ponemos localhost:3000/
    (con la barra,ya que / es raíz)

Ahora creamos una variable de entorno por si el pueto está ocupado:
    const puerto = process.env.PUERTO; modificamos tambien el listen
    Ahora podremos poner el puerto que queramos con set PUERTO=7000
 
// CREAMOS BASE DE DATOS // MSQL(LENGUAJE DE CONSULTAS ESTRUCTURADO)

usando phpmyadmin, creamos la tabla desde la interfaz y añadimos el script con los articulos:

// CONEXION A LA BASE DE DATOS  //